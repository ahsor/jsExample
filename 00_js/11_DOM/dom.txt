DOM(Document Object Model)
js를 이용해서 표시되는 웹페이지를 동적으로 동작할 수 있도록 해주는 인터페이스 
문서에 포함되는 요소나 속성, 텍스트를 요소노드, 속성논드, 텍스트 노드의 객체로 처리한다. 
또한 노드를 추가/추출/치환/삭제 하기위한 범용적인 수단을 제공 한다. 
트리구조 google 에서 이미지 찾아 보기 

[DOM 요소취득]
단일요소 반환
getElementById
id값이 중복되는 경우에도 처음에 일치하는 요소를 하나만 반환하지만
브라우저나 버전에 따라 변동될 수 있다. 

다중요소 반환 : 요소의 집합 즉 배열을 반환
getElementsByTagName
getElementsByClassName
getElementsByName
querySelector
querySelectorAll

HTMLCollection 주요 속성
length : 요소의 수 반환
item(i) : i번째 노드를 반환, 이 메소드는 배열로 대체할 수도 있다. 

<script>
      let listNames = document.getElementsByName("tab");
      console.log(listNames.length);
      for (var i = 0; i < listNames.length; i++) {
        console.log(listNames.item(i).href);
        // item() 로 접근
        console.log(listNames[i].href);
        // 배열로 접근 가능
      }
</script>


childNodes 프로퍼티는 getElementsByName/querySelectorAll 메소드와 같이 NodeList 반환하지만
추가적으로 노드의 속성을 파악할 수 있다.
nodelist에 포함되는 노드는 element뿐만이 아니라 개행이나 공백도 텍스트로 간주되며
프로퍼티 또한 요소 노드와 텍스트 노드로 취득할 가능성이 있다.
때문에 필요한 요소만을 꺼내기 위해 요소노드인지 확인할 필요가 있다.
    
      리턴값   
      1. 요소노드
      2. 속성노드
      3. 텍스트 노드
      4. CDATA 섹션
      5. 실제 참조 노드
      6. 실제 선언 노드
      7. 처리 명령 노드
      8. 주석 노드
      9. 문서 노드
      10. 문서형 선언 노드 
      11. 문서의 단편(fragment)
      12. 기법 선언 노드 

주요 이벤트 핸들러
1. 태그 내의 속성으로 선언하기
2. 요소 객체의 프로퍼티로 선언하기 
3. adddEventListener 메소드로 선언하기


.addClass()
.setAttribute('class', '클래스')
.classList.add('클래스')

.removeClass()
.classList.remove()
.classList.toggle()

브라우저의 capture flow 순서는 바꿀수 없으나
copture와 bubble은 선택할 수 있다. 


Propagation Up = capture
.stopPropagation()

html에서 이벤트 실행시 bubble실행이라면 모두 실행이 안될 수 있음 


이벤트에 공통적으로 들어가는 메소드도 있고 속성도 있음 
currentTarget, target은 공통 속성

a를 클릭하면 다른 페이지로 이동한다
checkbox 클릭시 
는 기본 로직
기본 로직을 변경하고 싶을 때 preventDefault()

